name: Apply Patch from Issue

on:
  issues:
    types: [opened, edited, reopened]

permissions:
  contents: write
  issues: write

jobs:
  apply:
    if: contains(github.event.issue.title, '[patch]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract patch from issue body
        id: extract
        run: |
          BODY=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
          printf "%s" "$BODY" > issue.md
          # pega o primeiro bloco ```patch ou ```diff
          awk '/```(patch|diff)/{flag=1;next}/```/{if(flag){flag=0;exit}}flag' issue.md > changes.patch
          if [ ! -s changes.patch ]; then
            echo "PATCH_FOUND=false" >> $GITHUB_OUTPUT
          else
            echo "PATCH_FOUND=true" >> $GITHUB_OUTPUT
          fi

      - name: Apply patch and push
        if: steps.extract.outputs.PATCH_FOUND == 'true'
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # aplica com tolerância de whitespace
          git apply -p0 --whitespace=nowarn changes.patch
          git add -A
          git commit -m "Apply patch from issue #${{ github.event.issue.number }}"
          git push

      - name: Comment result
        uses: actions/github-script@v7
        with:
          script: |
            const number = context.payload.issue.number;
            const patchFound = '${{ steps.extract.outputs.PATCH_FOUND }}' === 'true';
            const msg = patchFound
              ? "✅ Patch aplicado e commitado na branch padrão."
              : "❌ Patch não encontrado no corpo do issue. Coloque o conteúdo entre blocos ```patch ... ```.";
            await github.rest.issues.createComment({ ...context.repo, issue_number: number, body: msg });
